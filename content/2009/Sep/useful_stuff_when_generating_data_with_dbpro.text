---
title: Make your DbPro generated test data look better
published_on: 2009-09-14T19:10
published: true
categories: [DbPro, Database]
description: Following post is about generating readable data for your staging database with DbPro. You will find list of expressions for the Regular Expression Generator.
---
Few days ago I was tasked to fill database with millions records of data. We have to stress test our application and to define initial SLA. We use DbPro (Visual Studio Database Edition) to maintain our database schemas. Of course, I started with auto-generated strings. Looks terrible....

![Terrible generated data.](http://chaliy.name/files/useful_stuff_when_generating_data_with_dbpro/autogenerated-stuff.png)

Next idea was to use my [DbPro Generators][1]. Well, it could work for some fields. But... it does not work in my environment (64bit or Visual Studio SPs, I do not know).

Next smart idea was to use data we already have in databases. With data bound generators it could work. But... it is too hard to use. You have to move data, you have to sanitize it. And at the end you need to write queries for each field. Manually!

So pls, welcome the smartest idea! I decided to give a try to Regular Expression Generator. After some cracking of the Regexes, I ended with pretty readable results.

![Pretty generated data.](http://chaliy.name/files/useful_stuff_when_generating_data_with_dbpro/generated-but-better.png)

Following is Regex Expressions I used to generate my data. First and Last names are bit Slavonian, but you can contribute them in your language. I will add them to the list.

<table>
	<thead>
		<tr>
			<th>Goal</th>
			<th>Regular expression</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Email Address</td>
			<td><code>(admin|support|test|info|user|[a-z]{3,12})@[a-z]{3,12}((\.com)|(\.net)|(\.co\.uk)|(\.ua))</code></td> 
		</tr>
		<tr>
			<td>Website Address</td>
			<td><code>((http|https)://){0,1}www\.[a-z]{3,12}((\.com)|(\.net)|(\.co\.uk)|(\.ua))</code></td> 
		</tr>		
		<tr>
			<td>Comapany Name</td>
			<td><code>((Power)|(Super)|(Greate)|(Just)) [A-Z][a-z]{3,9} ((LTD)|(Inc)|(Corp))</code></td> 
		</tr>
		<tr>
			<td>Last Name</td>
			<td><code>[A-Z][a-z]{3,9}(chenko|ko|ov|ev|ns|er|th|il)</code></td> 
		</tr>
		<tr>
			<td>First Name</td>
			<td><code>(Sachko|Mikhailo|Bogdana|Viktor|Varvara|Neo|Alisa|Mira|Ludmila|[A-Z][a-z]{3,9})</code></td> 
		</tr>
		<tr>
			<td>County/Town</td>
			<td><code>(London|Kiev|Khrakiv|Paris)</code></td> 
		</tr>
		<tr>
			<td>Address</td>
			<td><code>[A-Z][a-z]{8,15} ([A-Z][a-z]{8,15}){0,4}( Av| Str){0,1}</code></td> 
		</tr>
		<tr>
			<td>Postal Code</td>
			<td><code>[0-9]{3,4}-[0-9]{4,5}</code></td> 
		</tr>
		<tr>
			<td>Country</td>
			<td><code>(UA|UK|AZ|FR)</code></td> 
		</tr>
		<tr>
			<td>Telephone Number</td>
			<td><code>\+[0-9]{1}([0-9]{3})-[0-9]{3}-[0-9]{4}</code></td> 
		</tr>
		<tr>
			<td>Order Number</td>
			<td><code>ORD[0-9]{8,8}</code></td> 
		</tr>
		<tr>
			<td>Lorem Ipusm</td>
			<td><code>(Lorem|A|Amet|Dius)( ipsum){0,1},((a|A|ac|accumsan|bibendum
			|blandit|conubia|dolor|eni|ipsum|laoreet
			|lorem|mauris|nunc|odio|senectus|urna|ut|velit|viverra|\.) )*</code></td>
		</tr>
	</tbody>
</table>

Enjoy!

[1]: http://dbprogenerators.codeplex.com/

